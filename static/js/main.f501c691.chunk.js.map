{"version":3,"sources":["components/SearchLine.js","util/timeAgo.js","components/Repository.js","containers/GlobalSearch.js","containers/UserSearch.js","App.js","index.js"],"names":["SearchLine","props","handleChange","bind","event","this","onSearchWordChange","target","value","onLanguageChange","onSortingChange","handleSubmit","className","onChange","onBlur","type","onClick","Component","TimeAgo","addLocale","en","timeAgoFormatter","timeAgo","dateString","format","Date","parse","Repository","repo","full_name","description","stargazers_count","language","updated_at","url","license","login","owner","src","process","alt","href","name","GlobalSearch","state","searchWord","loading","allRepos","items","loadMore","sorting","search","undefined","setState","fetch","response","json","repositoriesResult","pageNum","searchPage","newItems","fullList","concat","repos","i","length","push","key","id","sortingType","loader","CircularProgress","hasMore","dataLength","next","UserSearch","userName","match","params","username","finalUrl","console","log","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f501c691.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './searchLine.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SearchLine extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    // eslint-disable-next-line react/destructuring-assignment\r\n    this.props.onSearchWordChange(event.target.value);\r\n  }\r\n\r\n  render() {\r\n    const { onLanguageChange, onSortingChange, handleSubmit } = this.props;\r\n    return (\r\n      <div>\r\n        <div className=\"search-line\">\r\n          <input className=\"search-input\" onChange={this.handleChange} />\r\n          <select\r\n            className=\"select-button\"\r\n            onBlur={(event) => {\r\n              onLanguageChange(event.target.value);\r\n            }}\r\n          >\r\n            <option>All</option>\r\n            <option>JavaScript</option>\r\n            <option>Php</option>\r\n            <option>Java</option>\r\n            <option>Python</option>\r\n            <option>Perl</option>\r\n          </select>\r\n          <select\r\n            className=\"select-button\"\r\n            onBlur={(event) => {\r\n              onSortingChange(event.target.value);\r\n            }}\r\n          >\r\n            <option>Best</option>\r\n            <option>Stars</option>\r\n            <option>Forks</option>\r\n            <option>Help-wanted-issues</option>\r\n            <option>Updated</option>\r\n          </select>\r\n          <button type=\"button\" className=\"search-button\" onClick={handleSubmit}>Search</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearchLine.propTypes = {\r\n  onSearchWordChange: PropTypes.func.isRequired,\r\n  onLanguageChange: PropTypes.func.isRequired,\r\n  onSortingChange: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchLine;\r\n","import TimeAgo from 'javascript-time-ago';\r\nimport en from 'javascript-time-ago/locale/en';\r\n\r\nTimeAgo.addLocale(en);\r\nconst timeAgoFormatter = new TimeAgo('en-US');\r\n\r\nfunction timeAgo(dateString) {\r\n  return timeAgoFormatter.format(Date.parse(dateString));\r\n}\r\n\r\nexport default timeAgo;\r\n","/* eslint-disable camelcase */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './repository.css';\r\nimport timeAgo from '../util/timeAgo';\r\n\r\nclass Repository extends Component {\r\n  render() {\r\n    const {\r\n      repo: {\r\n        full_name, description, stargazers_count, language, updated_at, url, license,\r\n        owner: { login },\r\n      },\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"repository-all\">\r\n        <div className=\"book\">\r\n          <img src={process.env.PUBLIC_URL + '/book.svg'} alt=\"book\"/>\r\n        </div>\r\n        <div className=\"repository\">\r\n          <a className=\"full-name\" href={url}>{full_name}</a>\r\n          <div className=\"description\">{description}</div>\r\n          <div className=\"info\">\r\n            <div className=\"another-info\">\r\n              <img src={process.env.PUBLIC_URL + '/star.svg'} alt=\"star\" className=\"star\"/>\r\n              {stargazers_count}\r\n            </div>\r\n            <div className=\"another-info\">\r\n              <span className=\"repo-language-color\" />\r\n              {language}\r\n            </div>\r\n            { license\r\n              && (\r\n              <div className=\"another-info\">\r\n                {license.name}\r\n              </div>\r\n              )}\r\n            <div className=\"another-info\">\r\n              {timeAgo(updated_at)}\r\n              <a href={'/user/' + login} target='_blank'>{login}</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRepository.propTypes = {\r\n  repo: PropTypes.shape({\r\n    url: PropTypes.string.isRequired,\r\n    full_name: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    stargazers_count: PropTypes.number.isRequired,\r\n    language: PropTypes.string.isRequired,\r\n    license: PropTypes.shape({\r\n      name: PropTypes.string,\r\n    }),\r\n    updated_at: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Repository;\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport SearchLine from '../components/SearchLine';\r\nimport Repository from '../components/Repository';\r\n\r\nclass GlobalSearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchWord: '',\r\n      loading: false,\r\n      allRepos: {\r\n        items: [],\r\n      },\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.loadMore = this.loadMore.bind(this);\r\n  }\r\n\r\n  async handleSubmit() {\r\n    const { searchWord, sorting, language } = this.state;\r\n    const url = 'https://api.github.com/search/repositories';\r\n    let search = url + '?q=' + searchWord;\r\n    if (language !== undefined) {\r\n      search = search + '+language:' + language;\r\n    }\r\n    if (sorting !== undefined) {\r\n      search = search + '&sort=' + sorting;\r\n    }\r\n    this.setState({ loading: true });\r\n    const response = await fetch(search);\r\n    const repositoriesResult = await response.json();\r\n    this.setState({ allRepos: repositoriesResult, loading: false, pageNum: 1 });\r\n  }\r\n\r\n  async loadMore() {\r\n    const {\r\n      searchWord, sorting, language, pageNum,\r\n    } = this.state;\r\n    const url = 'https://api.github.com/search/repositories';\r\n    let search = url + '?q=' + searchWord;\r\n    if (language !== undefined) {\r\n      search = search + '+language:' + language;\r\n    }\r\n    if (sorting !== undefined) {\r\n      search = search + '&sort=' + sorting;\r\n    }\r\n    const searchPage = search + '&page=' + pageNum + '&per_page=30';\r\n    this.setState({ loading: true });\r\n    const response = await fetch(searchPage);\r\n    const repositoriesResult = await response.json();\r\n    const newItems = repositoriesResult.items;\r\n    // eslint-disable-next-line react/destructuring-assignment,react/no-access-state-in-setstate\r\n    const fullList = this.state.allRepos.items.concat(newItems);\r\n    this.setState({ loading: false, pageNum: pageNum + 1, allRepos: { items: fullList } });\r\n  }\r\n\r\n  render() {\r\n    const { loading, allRepos: { items } } = this.state;\r\n    const repos = [];\r\n    for (let i = 0; i < items.length; i++) {\r\n      repos.push(<Repository\r\n        key={items[i].id}\r\n        repo={items[i]}\r\n      />);\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <SearchLine\r\n          onSearchWordChange={(searchWord) => { this.setState({ searchWord }); }}\r\n          onLanguageChange={(language) => { this.setState({ language }); }}\r\n          onSortingChange={(sortingType) => { this.setState({ sorting: sortingType }); }}\r\n          handleSubmit={this.handleSubmit}\r\n        />\r\n        <InfiniteScroll\r\n          loader={loading && <CircularProgress />}\r\n          hasMore\r\n          dataLength={repos.length}\r\n          next={this.loadMore}\r\n        >\r\n          {!loading && repos}\r\n        </InfiniteScroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GlobalSearch;\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Repository from '../components/Repository';\r\n\r\nclass UserSearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      allRepos: '',\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const userName = this.props.match.params.username;\r\n    const url = 'https://api.github.com/users/';\r\n    const finalUrl = url + userName + '/repos';\r\n    this.setState({ loading: true });\r\n    const response = await fetch(finalUrl);\r\n    const repositoriesResult = await response.json();\r\n    this.setState({ allRepos: repositoriesResult, loading: false, pageNum: 1 });\r\n    console.log(this.state.allRepos);\r\n  }\r\n\r\n  render() {\r\n    const { allRepos } = this.state;\r\n    const repos = [];\r\n    for (let i = 0; i < allRepos.length; i++) {\r\n      repos.push(<Repository\r\n        key={allRepos[i].id}\r\n        repo={allRepos[i]}\r\n      />);\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        {repos}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserSearch;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport GlobalSearch from './containers/GlobalSearch';\r\nimport UserSearch from './containers/UserSearch';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <Route path={process.env.PUBLIC_URL + '/'} component={GlobalSearch} />\r\n        <Route path={process.env.PUBLIC_URL + '/user/:username'} component={UserSearch} />\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}